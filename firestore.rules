rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin';
    }
    
    // Users collection - allow authenticated users to read all users (needed for driver assignment)
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.uid == userId || 
         resource == null); // Allow creation of new documents
    }
    
    // Rides collection
    match /rides/{rideId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid ||
         resource.data.driverId == request.auth.uid ||
         isAdmin(request.auth.uid));
      allow update: if request.auth != null && 
        (resource.data.userId == request.auth.uid ||
         resource.data.driverId == request.auth.uid ||
         isAdmin(request.auth.uid));
      allow delete: if request.auth != null && 
        (resource.data.userId == request.auth.uid ||
         isAdmin(request.auth.uid));
    }
    
    // Complaints collection
    match /complaints/{complaintId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid ||
         isAdmin(request.auth.uid));
      allow update: if request.auth != null && 
        (resource.data.userId == request.auth.uid ||
         isAdmin(request.auth.uid));
      allow delete: if request.auth != null && 
        (resource.data.userId == request.auth.uid ||
         isAdmin(request.auth.uid));
    }
    
    // Class Schedules collection
    match /classSchedules/{scheduleId} {
      allow create: if request.auth != null;
      allow read, write: if request.auth != null && 
        (resource == null || // Allow reading for new document creation
         resource.data.userId == request.auth.uid);
    }
    
    // Default rule - deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
